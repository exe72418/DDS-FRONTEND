import { InjectionToken, Type } from '@angular/core';
import { StateToken } from '@ngxs/store';
import { ɵStateClass } from '@ngxs/store/internals';
import { StorageEngine } from './symbols';
/** This enables the user to provide a storage engine per individual key. */
export interface KeyWithExplicitEngine {
    key: string | ɵStateClass | StateToken<any>;
    engine: Type<StorageEngine> | InjectionToken<StorageEngine>;
}
/** Determines whether the provided key has the following structure. */
export declare function ɵisKeyWithExplicitEngine(key: any): key is KeyWithExplicitEngine;
/**
 * This tuples all of the possible types allowed in the `key` property.
 * This is not exposed publicly and used internally only.
 */
export type StorageKey = string | ɵStateClass | StateToken<any> | KeyWithExplicitEngine;
export declare function ɵextractStringKey(storageKey: StorageKey): string;
