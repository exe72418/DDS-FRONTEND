import { createSelector } from './create-selector';
import { ensureValidSelector } from './selector-checks.util';
export function createPropertySelectors(parentSelector) {
    if (typeof ngDevMode !== 'undefined' && ngDevMode) {
        ensureValidSelector(parentSelector, {
            prefix: '[createPropertySelectors]',
            noun: 'parent selector'
        });
    }
    const cache = {};
    return new Proxy({}, {
        get(_target, prop) {
            const selector = cache[prop] ||
                createSelector([parentSelector], (s) => s?.[prop]);
            cache[prop] = selector;
            return selector;
        }
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLXByb3BlcnR5LXNlbGVjdG9ycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL3N0b3JlL3NyYy9zZWxlY3RvcnMvY3JlYXRlLXByb3BlcnR5LXNlbGVjdG9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFTN0QsTUFBTSxVQUFVLHVCQUF1QixDQUNyQyxjQUFvQztJQUVwQyxJQUFJLE9BQU8sU0FBUyxLQUFLLFdBQVcsSUFBSSxTQUFTLEVBQUUsQ0FBQztRQUNsRCxtQkFBbUIsQ0FBQyxjQUFjLEVBQUU7WUFDbEMsTUFBTSxFQUFFLDJCQUEyQjtZQUNuQyxJQUFJLEVBQUUsaUJBQWlCO1NBQ3hCLENBQUMsQ0FBQztJQUNMLENBQUM7SUFDRCxNQUFNLEtBQUssR0FBdUMsRUFBRSxDQUFDO0lBQ3JELE9BQU8sSUFBSSxLQUFLLENBQ2QsRUFBMEMsRUFDMUM7UUFDRSxHQUFHLENBQUMsT0FBWSxFQUFFLElBQWtCO1lBQ2xDLE1BQU0sUUFBUSxHQUNaLEtBQUssQ0FBQyxJQUFJLENBQUM7Z0JBQ1YsY0FBYyxDQUNiLENBQUMsY0FBYyxDQUFDLEVBQ2hCLENBQUMsQ0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FDa0IsQ0FBQztZQUMvQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsUUFBUSxDQUFDO1lBQ3ZCLE9BQU8sUUFBUSxDQUFDO1FBQ2xCLENBQUM7S0FDeUMsQ0FDN0MsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTZWxlY3RvciB9IGZyb20gJy4vY3JlYXRlLXNlbGVjdG9yJztcbmltcG9ydCB7IGVuc3VyZVZhbGlkU2VsZWN0b3IgfSBmcm9tICcuL3NlbGVjdG9yLWNoZWNrcy51dGlsJztcbmltcG9ydCB7IMm1U2VsZWN0b3JEZWYgfSBmcm9tICcuL3NlbGVjdG9yLXR5cGVzLnV0aWwnO1xuXG5leHBvcnQgdHlwZSBQcm9wZXJ0eVNlbGVjdG9yczxUTW9kZWw+ID0ge1xuICBbUCBpbiBrZXlvZiBOb25OdWxsYWJsZTxUTW9kZWw+XS0/OiAoXG4gICAgbW9kZWw6IFRNb2RlbFxuICApID0+IFRNb2RlbCBleHRlbmRzIG51bGwgfCB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiBOb25OdWxsYWJsZTxUTW9kZWw+W1BdO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVByb3BlcnR5U2VsZWN0b3JzPFRNb2RlbD4oXG4gIHBhcmVudFNlbGVjdG9yOiDJtVNlbGVjdG9yRGVmPFRNb2RlbD5cbik6IFByb3BlcnR5U2VsZWN0b3JzPFRNb2RlbD4ge1xuICBpZiAodHlwZW9mIG5nRGV2TW9kZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbmdEZXZNb2RlKSB7XG4gICAgZW5zdXJlVmFsaWRTZWxlY3RvcihwYXJlbnRTZWxlY3Rvciwge1xuICAgICAgcHJlZml4OiAnW2NyZWF0ZVByb3BlcnR5U2VsZWN0b3JzXScsXG4gICAgICBub3VuOiAncGFyZW50IHNlbGVjdG9yJ1xuICAgIH0pO1xuICB9XG4gIGNvbnN0IGNhY2hlOiBQYXJ0aWFsPFByb3BlcnR5U2VsZWN0b3JzPFRNb2RlbD4+ID0ge307XG4gIHJldHVybiBuZXcgUHJveHk8UHJvcGVydHlTZWxlY3RvcnM8VE1vZGVsPj4oXG4gICAge30gYXMgdW5rbm93biBhcyBQcm9wZXJ0eVNlbGVjdG9yczxUTW9kZWw+LFxuICAgIHtcbiAgICAgIGdldChfdGFyZ2V0OiBhbnksIHByb3A6IGtleW9mIFRNb2RlbCkge1xuICAgICAgICBjb25zdCBzZWxlY3RvciA9XG4gICAgICAgICAgY2FjaGVbcHJvcF0gfHxcbiAgICAgICAgICAoY3JlYXRlU2VsZWN0b3IoXG4gICAgICAgICAgICBbcGFyZW50U2VsZWN0b3JdLFxuICAgICAgICAgICAgKHM6IFRNb2RlbCkgPT4gcz8uW3Byb3BdXG4gICAgICAgICAgKSBhcyBQcm9wZXJ0eVNlbGVjdG9yczxUTW9kZWw+W3R5cGVvZiBwcm9wXSk7XG4gICAgICAgIGNhY2hlW3Byb3BdID0gc2VsZWN0b3I7XG4gICAgICAgIHJldHVybiBzZWxlY3RvcjtcbiAgICAgIH1cbiAgICB9IGFzIFByb3h5SGFuZGxlcjxQcm9wZXJ0eVNlbGVjdG9yczxUTW9kZWw+PlxuICApO1xufVxuIl19