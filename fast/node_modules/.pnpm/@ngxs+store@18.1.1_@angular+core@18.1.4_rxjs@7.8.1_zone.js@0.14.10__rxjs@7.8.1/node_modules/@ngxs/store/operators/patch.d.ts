import { NoInfer, StateOperator } from './types';
type NotUndefined<T> = T extends undefined ? never : T;
export type ɵPatchSpec<T> = {
    [P in keyof T]?: T[P] | StateOperator<NotUndefined<T[P]>>;
};
export declare function patch<T extends Record<string, any>>(patchObject: NoInfer<ɵPatchSpec<T>>): StateOperator<T>;
export {};
