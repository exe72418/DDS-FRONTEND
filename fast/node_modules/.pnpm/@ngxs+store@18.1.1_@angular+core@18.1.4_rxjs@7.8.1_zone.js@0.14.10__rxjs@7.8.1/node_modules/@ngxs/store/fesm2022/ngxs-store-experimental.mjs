import { inject, ExperimentalPendingTasks } from '@angular/core';
import { withNgxsPreboot, Actions } from '@ngxs/store';

/**
 * This is an experimental feature that contributes to app stability,
 * which is required during server-side rendering. With asynchronous
 * actions being dispatched and handled, Angular is unaware of them in
 * zoneless mode and doesn't know whether the app is still unstable.
 * This may prematurely serialize the final HTML that is sent to the client.
 */
function withExperimentalNgxsPendingTasks() {
    return withNgxsPreboot(() => {
        const pendingTasks = inject(ExperimentalPendingTasks);
        const actions$ = inject(Actions);
        const actionToRemoveTaskFnMap = new Map();
        actions$.subscribe(ctx => {
            if (ctx.status === "DISPATCHED" /* ActionStatus.Dispatched */) {
                const removeTaskFn = pendingTasks.add();
                actionToRemoveTaskFnMap.set(ctx.action, removeTaskFn);
            }
            else {
                const removeTaskFn = actionToRemoveTaskFnMap.get(ctx.action);
                if (typeof removeTaskFn === 'function') {
                    removeTaskFn();
                    actionToRemoveTaskFnMap.delete(ctx.action);
                }
            }
        });
    });
}

/**
 * Generated bundle index. Do not edit.
 */

export { withExperimentalNgxsPendingTasks };
//# sourceMappingURL=ngxs-store-experimental.mjs.map
