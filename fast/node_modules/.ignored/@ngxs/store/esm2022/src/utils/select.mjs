import { inject } from '@angular/core';
import { Store } from '../store';
/**
 * This function serves as a utility and has multiple purposes.
 * Firstly, it allows you to select properties from the state class
 * without having to inject the store class and use `this.store.selectSignal`,
 * resulting in a more concise implementation. Secondly, it can be used with
 * other solutions such as NgRx signal store with its `signalStoreFeature` or
 * `withComputed` functionalities.
 *
 * Please note that it's named `select` instead of `selectSignal` because
 * signals are evolving into first-class primitives in Angular, displacing other
 * primitives such as observables. Observables represent a stream of events,
 * whereas signals represent a single value changing over time.
 */
export function select(selector) {
    return inject(Store).selectSignal(selector);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvc3RvcmUvc3JjL3V0aWxzL3NlbGVjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQVUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRS9DLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFHakM7Ozs7Ozs7Ozs7OztHQVlHO0FBQ0gsTUFBTSxVQUFVLE1BQU0sQ0FBSSxRQUEwQjtJQUNsRCxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDOUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNpZ25hbCwgaW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFN0b3JlIH0gZnJvbSAnLi4vc3RvcmUnO1xuaW1wb3J0IHsgVHlwZWRTZWxlY3RvciB9IGZyb20gJy4uL3NlbGVjdG9ycyc7XG5cbi8qKlxuICogVGhpcyBmdW5jdGlvbiBzZXJ2ZXMgYXMgYSB1dGlsaXR5IGFuZCBoYXMgbXVsdGlwbGUgcHVycG9zZXMuXG4gKiBGaXJzdGx5LCBpdCBhbGxvd3MgeW91IHRvIHNlbGVjdCBwcm9wZXJ0aWVzIGZyb20gdGhlIHN0YXRlIGNsYXNzXG4gKiB3aXRob3V0IGhhdmluZyB0byBpbmplY3QgdGhlIHN0b3JlIGNsYXNzIGFuZCB1c2UgYHRoaXMuc3RvcmUuc2VsZWN0U2lnbmFsYCxcbiAqIHJlc3VsdGluZyBpbiBhIG1vcmUgY29uY2lzZSBpbXBsZW1lbnRhdGlvbi4gU2Vjb25kbHksIGl0IGNhbiBiZSB1c2VkIHdpdGhcbiAqIG90aGVyIHNvbHV0aW9ucyBzdWNoIGFzIE5nUnggc2lnbmFsIHN0b3JlIHdpdGggaXRzIGBzaWduYWxTdG9yZUZlYXR1cmVgIG9yXG4gKiBgd2l0aENvbXB1dGVkYCBmdW5jdGlvbmFsaXRpZXMuXG4gKlxuICogUGxlYXNlIG5vdGUgdGhhdCBpdCdzIG5hbWVkIGBzZWxlY3RgIGluc3RlYWQgb2YgYHNlbGVjdFNpZ25hbGAgYmVjYXVzZVxuICogc2lnbmFscyBhcmUgZXZvbHZpbmcgaW50byBmaXJzdC1jbGFzcyBwcmltaXRpdmVzIGluIEFuZ3VsYXIsIGRpc3BsYWNpbmcgb3RoZXJcbiAqIHByaW1pdGl2ZXMgc3VjaCBhcyBvYnNlcnZhYmxlcy4gT2JzZXJ2YWJsZXMgcmVwcmVzZW50IGEgc3RyZWFtIG9mIGV2ZW50cyxcbiAqIHdoZXJlYXMgc2lnbmFscyByZXByZXNlbnQgYSBzaW5nbGUgdmFsdWUgY2hhbmdpbmcgb3ZlciB0aW1lLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2VsZWN0PFQ+KHNlbGVjdG9yOiBUeXBlZFNlbGVjdG9yPFQ+KTogU2lnbmFsPFQ+IHtcbiAgcmV0dXJuIGluamVjdChTdG9yZSkuc2VsZWN0U2lnbmFsKHNlbGVjdG9yKTtcbn1cbiJdfQ==