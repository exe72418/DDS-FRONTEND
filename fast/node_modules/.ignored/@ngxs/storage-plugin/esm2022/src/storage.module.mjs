import { NgModule, PLATFORM_ID, makeEnvironmentProviders } from '@angular/core';
import { withNgxsPlugin } from '@ngxs/store';
import { NGXS_PLUGINS } from '@ngxs/store/plugins';
import { ɵUSER_OPTIONS, STORAGE_ENGINE, ɵNGXS_STORAGE_PLUGIN_OPTIONS } from '@ngxs/storage-plugin/internals';
import { NgxsStoragePlugin } from './storage.plugin';
import { engineFactory, storageOptionsFactory } from './internals';
import * as i0 from "@angular/core";
export class NgxsStoragePluginModule {
    static forRoot(options) {
        return {
            ngModule: NgxsStoragePluginModule,
            providers: [
                {
                    provide: NGXS_PLUGINS,
                    useClass: NgxsStoragePlugin,
                    multi: true
                },
                {
                    provide: ɵUSER_OPTIONS,
                    useValue: options
                },
                {
                    provide: ɵNGXS_STORAGE_PLUGIN_OPTIONS,
                    useFactory: storageOptionsFactory,
                    deps: [ɵUSER_OPTIONS]
                },
                {
                    provide: STORAGE_ENGINE,
                    useFactory: engineFactory,
                    deps: [ɵNGXS_STORAGE_PLUGIN_OPTIONS, PLATFORM_ID]
                }
            ]
        };
    }
    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.6", ngImport: i0, type: NgxsStoragePluginModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    /** @nocollapse */ static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "18.0.6", ngImport: i0, type: NgxsStoragePluginModule }); }
    /** @nocollapse */ static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "18.0.6", ngImport: i0, type: NgxsStoragePluginModule }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.6", ngImport: i0, type: NgxsStoragePluginModule, decorators: [{
            type: NgModule
        }] });
export function withNgxsStoragePlugin(options) {
    return makeEnvironmentProviders([
        withNgxsPlugin(NgxsStoragePlugin),
        {
            provide: ɵUSER_OPTIONS,
            useValue: options
        },
        {
            provide: ɵNGXS_STORAGE_PLUGIN_OPTIONS,
            useFactory: storageOptionsFactory,
            deps: [ɵUSER_OPTIONS]
        },
        {
            provide: STORAGE_ENGINE,
            useFactory: engineFactory,
            deps: [ɵNGXS_STORAGE_PLUGIN_OPTIONS, PLATFORM_ID]
        }
    ]);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmFnZS5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wYWNrYWdlcy9zdG9yYWdlLXBsdWdpbi9zcmMvc3RvcmFnZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFFBQVEsRUFFUixXQUFXLEVBRVgsd0JBQXdCLEVBQ3pCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDN0MsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ25ELE9BQU8sRUFDTCxhQUFhLEVBQ2IsY0FBYyxFQUNkLDRCQUE0QixFQUU3QixNQUFNLGdDQUFnQyxDQUFDO0FBRXhDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxhQUFhLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxhQUFhLENBQUM7O0FBR25FLE1BQU0sT0FBTyx1QkFBdUI7SUFDbEMsTUFBTSxDQUFDLE9BQU8sQ0FDWixPQUFpQztRQUVqQyxPQUFPO1lBQ0wsUUFBUSxFQUFFLHVCQUF1QjtZQUNqQyxTQUFTLEVBQUU7Z0JBQ1Q7b0JBQ0UsT0FBTyxFQUFFLFlBQVk7b0JBQ3JCLFFBQVEsRUFBRSxpQkFBaUI7b0JBQzNCLEtBQUssRUFBRSxJQUFJO2lCQUNaO2dCQUNEO29CQUNFLE9BQU8sRUFBRSxhQUFhO29CQUN0QixRQUFRLEVBQUUsT0FBTztpQkFDbEI7Z0JBQ0Q7b0JBQ0UsT0FBTyxFQUFFLDRCQUE0QjtvQkFDckMsVUFBVSxFQUFFLHFCQUFxQjtvQkFDakMsSUFBSSxFQUFFLENBQUMsYUFBYSxDQUFDO2lCQUN0QjtnQkFDRDtvQkFDRSxPQUFPLEVBQUUsY0FBYztvQkFDdkIsVUFBVSxFQUFFLGFBQWE7b0JBQ3pCLElBQUksRUFBRSxDQUFDLDRCQUE0QixFQUFFLFdBQVcsQ0FBQztpQkFDbEQ7YUFDRjtTQUNGLENBQUM7SUFDSixDQUFDO2lJQTVCVSx1QkFBdUI7a0lBQXZCLHVCQUF1QjtrSUFBdkIsdUJBQXVCOzsyRkFBdkIsdUJBQXVCO2tCQURuQyxRQUFROztBQWdDVCxNQUFNLFVBQVUscUJBQXFCLENBQ25DLE9BQWlDO0lBRWpDLE9BQU8sd0JBQXdCLENBQUM7UUFDOUIsY0FBYyxDQUFDLGlCQUFpQixDQUFDO1FBQ2pDO1lBQ0UsT0FBTyxFQUFFLGFBQWE7WUFDdEIsUUFBUSxFQUFFLE9BQU87U0FDbEI7UUFDRDtZQUNFLE9BQU8sRUFBRSw0QkFBNEI7WUFDckMsVUFBVSxFQUFFLHFCQUFxQjtZQUNqQyxJQUFJLEVBQUUsQ0FBQyxhQUFhLENBQUM7U0FDdEI7UUFDRDtZQUNFLE9BQU8sRUFBRSxjQUFjO1lBQ3ZCLFVBQVUsRUFBRSxhQUFhO1lBQ3pCLElBQUksRUFBRSxDQUFDLDRCQUE0QixFQUFFLFdBQVcsQ0FBQztTQUNsRDtLQUNGLENBQUMsQ0FBQztBQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBOZ01vZHVsZSxcbiAgTW9kdWxlV2l0aFByb3ZpZGVycyxcbiAgUExBVEZPUk1fSUQsXG4gIEVudmlyb25tZW50UHJvdmlkZXJzLFxuICBtYWtlRW52aXJvbm1lbnRQcm92aWRlcnNcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyB3aXRoTmd4c1BsdWdpbiB9IGZyb20gJ0BuZ3hzL3N0b3JlJztcbmltcG9ydCB7IE5HWFNfUExVR0lOUyB9IGZyb20gJ0BuZ3hzL3N0b3JlL3BsdWdpbnMnO1xuaW1wb3J0IHtcbiAgybVVU0VSX09QVElPTlMsXG4gIFNUT1JBR0VfRU5HSU5FLFxuICDJtU5HWFNfU1RPUkFHRV9QTFVHSU5fT1BUSU9OUyxcbiAgTmd4c1N0b3JhZ2VQbHVnaW5PcHRpb25zXG59IGZyb20gJ0BuZ3hzL3N0b3JhZ2UtcGx1Z2luL2ludGVybmFscyc7XG5cbmltcG9ydCB7IE5neHNTdG9yYWdlUGx1Z2luIH0gZnJvbSAnLi9zdG9yYWdlLnBsdWdpbic7XG5pbXBvcnQgeyBlbmdpbmVGYWN0b3J5LCBzdG9yYWdlT3B0aW9uc0ZhY3RvcnkgfSBmcm9tICcuL2ludGVybmFscyc7XG5cbkBOZ01vZHVsZSgpXG5leHBvcnQgY2xhc3MgTmd4c1N0b3JhZ2VQbHVnaW5Nb2R1bGUge1xuICBzdGF0aWMgZm9yUm9vdChcbiAgICBvcHRpb25zOiBOZ3hzU3RvcmFnZVBsdWdpbk9wdGlvbnNcbiAgKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hzU3RvcmFnZVBsdWdpbk1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4c1N0b3JhZ2VQbHVnaW5Nb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IE5HWFNfUExVR0lOUyxcbiAgICAgICAgICB1c2VDbGFzczogTmd4c1N0b3JhZ2VQbHVnaW4sXG4gICAgICAgICAgbXVsdGk6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IMm1VVNFUl9PUFRJT05TLFxuICAgICAgICAgIHVzZVZhbHVlOiBvcHRpb25zXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiDJtU5HWFNfU1RPUkFHRV9QTFVHSU5fT1BUSU9OUyxcbiAgICAgICAgICB1c2VGYWN0b3J5OiBzdG9yYWdlT3B0aW9uc0ZhY3RvcnksXG4gICAgICAgICAgZGVwczogW8m1VVNFUl9PUFRJT05TXVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcHJvdmlkZTogU1RPUkFHRV9FTkdJTkUsXG4gICAgICAgICAgdXNlRmFjdG9yeTogZW5naW5lRmFjdG9yeSxcbiAgICAgICAgICBkZXBzOiBbybVOR1hTX1NUT1JBR0VfUExVR0lOX09QVElPTlMsIFBMQVRGT1JNX0lEXVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gd2l0aE5neHNTdG9yYWdlUGx1Z2luKFxuICBvcHRpb25zOiBOZ3hzU3RvcmFnZVBsdWdpbk9wdGlvbnNcbik6IEVudmlyb25tZW50UHJvdmlkZXJzIHtcbiAgcmV0dXJuIG1ha2VFbnZpcm9ubWVudFByb3ZpZGVycyhbXG4gICAgd2l0aE5neHNQbHVnaW4oTmd4c1N0b3JhZ2VQbHVnaW4pLFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IMm1VVNFUl9PUFRJT05TLFxuICAgICAgdXNlVmFsdWU6IG9wdGlvbnNcbiAgICB9LFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IMm1TkdYU19TVE9SQUdFX1BMVUdJTl9PUFRJT05TLFxuICAgICAgdXNlRmFjdG9yeTogc3RvcmFnZU9wdGlvbnNGYWN0b3J5LFxuICAgICAgZGVwczogW8m1VVNFUl9PUFRJT05TXVxuICAgIH0sXG4gICAge1xuICAgICAgcHJvdmlkZTogU1RPUkFHRV9FTkdJTkUsXG4gICAgICB1c2VGYWN0b3J5OiBlbmdpbmVGYWN0b3J5LFxuICAgICAgZGVwczogW8m1TkdYU19TVE9SQUdFX1BMVUdJTl9PUFRJT05TLCBQTEFURk9STV9JRF1cbiAgICB9XG4gIF0pO1xufVxuIl19